-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)

WIDTH=32;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
        0:              00000463;  --           beq x0 x0 8 <reset>
        1:              02000263;  --           beq x0 x0 36 <trap>

-- <reset>:
        2:              61002303;  --		lw x6 0x610(x0)
        3:              00100293;  --		addi x5 x0 1
        4:              00532023;  --		sw x5 0(x6)
        5:              08532023;  --           sw x5 0x80(x6)
        6:              08532fa3;  --           sw x5 0x9f(x6)   159 is the end of the line. 640 / 4 = 160
        7:              00000000;  --           <------------- illegal instruction
        8:              00128313;  --           addi x6 x5 1

-- <loop_in_reset>:
        9:              00000063;  --           beq x0 x0 0 <loop_in_reset>

-- <trap>:
        a:              61402303;  --           lw x6 0x614(x0)
        b:              00400293;  --           addi x5 x0 4
        c:              00532023;  --           sw x5 0(x6)
        d:              00000013;  --           nop
        e:              00000013;  --           nop
        f:              00000013;  --           nop

-- <loop_in_trap>:
        10:             00000063;  --           beq x0 x0 0 <loop_in_trap>

	[11..17F] :     00000000;
	
	180  :   00010000;      -- data line 0
	181  :   00010100;      -- data line 1
	182  :   00010200;      -- data line 2
	183  :   00010300;      -- data line 3
	184  :   00010400;      -- data line 4
	185  :   00010500;      -- data line 5
	186  :   00010600;      -- data line 6
	187  :   00010700;      -- data line 7
	188  :   00010800;      -- data line 8
	189  :   00010900;      -- data line 9
	18A  :   00010a00;      -- data line a
	18B  :   00010b00;      -- data line b
	18C  :   00010c00;      -- data line c
	18D  :   00010d00;      -- data line d
	18E  :   00010e00;      -- data line e
	18F  :   00010f00;      -- data line f
	[190..7FF]  :   00000000;

END;
